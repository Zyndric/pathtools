% common_basepath unit tests

% Copyright (c) 2013, Alexander Roehnsch
% Released under the terms of the BSD 2-Clause License (FreeBSD license)
% http://opensource.org/licenses/BSD-2-Clause
function test_common_basepath

% normal use case
expect_from(@() common_basepath({'my/arbitrary/path/file.name', 'my', 'my/some/path'}), ...
    'my', ...
    {['arbitrary' filesep 'path' filesep 'file.name'], '', ['some' filesep 'path']});

% empty relpaths
expect_from(@() common_basepath({'same', 'same'}), ...
    'same', ...
    {'', ''});

% empty relpaths with non-trivial basepath
if ispc
    expect_from(@() common_basepath({'same/path', 'same\path'}), ...
        ['same' filesep 'path'], ...
        {'', ''});
elseif isunix
    % apparently under Unix, a\b is not a valid path, but \b a special character
    expect_from(@() common_basepath({'same/path', 'same\path'}), ...
        [''], ...
        {'same/path', 'same\path'});
end

% empty basepath
expect_from(@() common_basepath({'different', 'paths'}), ...
    '', ...
    {'different', 'paths'});

% empty basepath with non-trivial relpaths
expect_from(@() common_basepath({'different/a', 'paths/a'}), ...
    '', ...
    {['different' filesep 'a'], ['paths' filesep 'a']});

% no argument
expect_from(@() common_basepath(), ...
    '', ...
    {});

% empty cell argument
expect_from(@() common_basepath({}), ...
    '', ...
    {});

% cell with empty path
expect_from(@() common_basepath({''}), ...
    '', ...
    {''});

% cell with several empty paths
expect_from(@() common_basepath({'', '', ''}), ...
    '', ...
    {'', '', ''});

% non-trivial paths shape
expect_from(@() common_basepath({'p1', 'p2'; 'p3', 'p4'}), ...
    '', ...
    {'p1', 'p2'; 'p3', 'p4'});

% non-trivial basepath and relpaths
expect_from(@() common_basepath({'a/b/c/d', 'a/b/d/e', 'a/b/e/f'}), ...
    ['a' filesep 'b'], ...
    {['c' filesep 'd'], ['d' filesep 'e'], ['e' filesep 'f']});

disp('common_basepath: 11 tests run.');
